// Code generated by protoc-gen-gogo.
// source: authentication.proto
// DO NOT EDIT!

/*
	Package mesosproto is a generated protocol buffer package.

	It is generated from these files:
		authentication.proto
		containerizer.proto
		internal.proto
		log.proto
		mesos.proto
		messages.proto
		registry.proto
		scheduler.proto
		state.proto

	It has these top-level messages:
		AuthenticateMessage
		AuthenticationMechanismsMessage
		AuthenticationStartMessage
		AuthenticationStepMessage
		AuthenticationCompletedMessage
		AuthenticationFailedMessage
		AuthenticationErrorMessage
		Launch
		Update
		Wait
		Destroy
		Usage
		Termination
		Containers
		InternalMasterChangeDetected
		InternalTryAuthentication
		InternalAuthenticationResult
		Promise
		Action
		Metadata
		Record
		PromiseRequest
		PromiseResponse
		WriteRequest
		WriteResponse
		LearnedMessage
		RecoverRequest
		RecoverResponse
		FrameworkID
		OfferID
		SlaveID
		TaskID
		ExecutorID
		ContainerID
		FrameworkInfo
		HealthCheck
		CommandInfo
		ExecutorInfo
		MasterInfo
		SlaveInfo
		Value
		Attribute
		Resource
		TrafficControlStatistics
		ResourceStatistics
		ResourceUsage
		PerfStatistics
		Request
		Offer
		TaskInfo
		TaskStatus
		Filters
		Environment
		Parameter
		Parameters
		Credential
		Credentials
		ACL
		ACLs
		RateLimit
		RateLimits
		Volume
		ContainerInfo
		Labels
		Label
		Port
		Ports
		DiscoveryInfo
		Task
		StatusUpdate
		StatusUpdateRecord
		SubmitSchedulerRequest
		SubmitSchedulerResponse
		ExecutorToFrameworkMessage
		FrameworkToExecutorMessage
		RegisterFrameworkMessage
		ReregisterFrameworkMessage
		FrameworkRegisteredMessage
		FrameworkReregisteredMessage
		UnregisterFrameworkMessage
		DeactivateFrameworkMessage
		ResourceRequestMessage
		ResourceOffersMessage
		LaunchTasksMessage
		RescindResourceOfferMessage
		ReviveOffersMessage
		RunTaskMessage
		KillTaskMessage
		StatusUpdateMessage
		StatusUpdateAcknowledgementMessage
		LostSlaveMessage
		ReconcileTasksMessage
		FrameworkErrorMessage
		RegisterSlaveMessage
		ReregisterSlaveMessage
		SlaveRegisteredMessage
		SlaveReregisteredMessage
		UnregisterSlaveMessage
		MasterSlaveConnection
		PingSlaveMessage
		PongSlaveMessage
		ShutdownFrameworkMessage
		ShutdownExecutorMessage
		UpdateFrameworkMessage
		CheckpointResourcesMessage
		UpdateSlaveMessage
		RegisterExecutorMessage
		ExecutorRegisteredMessage
		ExecutorReregisteredMessage
		ExitedExecutorMessage
		ReconnectExecutorMessage
		ReregisterExecutorMessage
		ShutdownMessage
		Archive
		TaskHealthStatus
		HookExecuted
		Registry
		Event
		Call
		Entry
		Operation
*/
package mesosproto

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AuthenticateMessage struct {
	Pid              *string `protobuf:"bytes,1,req,name=pid" json:"pid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AuthenticateMessage) Reset()         { *m = AuthenticateMessage{} }
func (m *AuthenticateMessage) String() string { return proto.CompactTextString(m) }
func (*AuthenticateMessage) ProtoMessage()    {}

func (m *AuthenticateMessage) GetPid() string {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return ""
}

type AuthenticationMechanismsMessage struct {
	Mechanisms       []string `protobuf:"bytes,1,rep,name=mechanisms" json:"mechanisms,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *AuthenticationMechanismsMessage) Reset()         { *m = AuthenticationMechanismsMessage{} }
func (m *AuthenticationMechanismsMessage) String() string { return proto.CompactTextString(m) }
func (*AuthenticationMechanismsMessage) ProtoMessage()    {}

func (m *AuthenticationMechanismsMessage) GetMechanisms() []string {
	if m != nil {
		return m.Mechanisms
	}
	return nil
}

type AuthenticationStartMessage struct {
	Mechanism        *string `protobuf:"bytes,1,req,name=mechanism" json:"mechanism,omitempty"`
	Data             []byte  `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AuthenticationStartMessage) Reset()         { *m = AuthenticationStartMessage{} }
func (m *AuthenticationStartMessage) String() string { return proto.CompactTextString(m) }
func (*AuthenticationStartMessage) ProtoMessage()    {}

func (m *AuthenticationStartMessage) GetMechanism() string {
	if m != nil && m.Mechanism != nil {
		return *m.Mechanism
	}
	return ""
}

func (m *AuthenticationStartMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type AuthenticationStepMessage struct {
	Data             []byte `protobuf:"bytes,1,req,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AuthenticationStepMessage) Reset()         { *m = AuthenticationStepMessage{} }
func (m *AuthenticationStepMessage) String() string { return proto.CompactTextString(m) }
func (*AuthenticationStepMessage) ProtoMessage()    {}

func (m *AuthenticationStepMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type AuthenticationCompletedMessage struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *AuthenticationCompletedMessage) Reset()         { *m = AuthenticationCompletedMessage{} }
func (m *AuthenticationCompletedMessage) String() string { return proto.CompactTextString(m) }
func (*AuthenticationCompletedMessage) ProtoMessage()    {}

type AuthenticationFailedMessage struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *AuthenticationFailedMessage) Reset()         { *m = AuthenticationFailedMessage{} }
func (m *AuthenticationFailedMessage) String() string { return proto.CompactTextString(m) }
func (*AuthenticationFailedMessage) ProtoMessage()    {}

type AuthenticationErrorMessage struct {
	Error            *string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AuthenticationErrorMessage) Reset()         { *m = AuthenticationErrorMessage{} }
func (m *AuthenticationErrorMessage) String() string { return proto.CompactTextString(m) }
func (*AuthenticationErrorMessage) ProtoMessage()    {}

func (m *AuthenticationErrorMessage) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}
