.TH "KUBERNETES" "1" " kubernetes User Manuals" "Eric Paris" "Jan 2015"  ""


.SH NAME
.PP
kubectl run \- Run a particular image on the cluster.


.SH SYNOPSIS
.PP
\fBkubectl run\fP [OPTIONS]


.SH DESCRIPTION
.PP
Create and run a particular image, possibly replicated.
Creates a replication controller to manage the created container(s).


.SH OPTIONS
.PP
\fB\-\-attach\fP=false
    If true, wait for the Pod to start running, and then attach to the Pod as if 'kubectl attach ...' were called.  Default false, unless '\-i/\-\-interactive' is set, in which case the default is true.

.PP
\fB\-\-command\fP=false
    If true and extra arguments are present, use them as the 'command' field in the container, rather than the 'args' field which is the default.

.PP
\fB\-\-dry\-run\fP=false
    If true, only print the object that would be sent, without sending it.

.PP
\fB\-\-env\fP=[]
    Environment variables to set in the container

.PP
\fB\-\-generator\fP=""
    The name of the API generator to use.  Default is 'run/v1' if \-\-restart=Always, otherwise the default is 'run\-pod/v1'.

.PP
\fB\-\-hostport\fP=\-1
    The host port mapping for the container port. To demonstrate a single\-machine container.

.PP
\fB\-\-image\fP=""
    The image for the container to run.

.PP
\fB\-l\fP, \fB\-\-labels\fP=""
    Labels to apply to the pod(s).

.PP
\fB\-\-limits\fP=""
    The resource requirement limits for this container.  For example, 'cpu=200m,memory=512Mi'

.PP
\fB\-\-no\-headers\fP=false
    When using the default output, don't print headers.

.PP
\fB\-o\fP, \fB\-\-output\fP=""
    Output format. One of: json|yaml|wide|name|go\-template=...|go\-template\-file=...|jsonpath=...|jsonpath\-file=... See golang template [
\[la]http://golang.org/pkg/text/template/#pkg-overview\[ra]] and jsonpath template [
\[la]http://releases.k8s.io/HEAD/docs/user-guide/jsonpath.md\[ra]].

.PP
\fB\-\-output\-version\fP=""
    Output the formatted object with the given version (default api\-version).

.PP
\fB\-\-overrides\fP=""
    An inline JSON override for the generated object. If this is non\-empty, it is used to override the generated object. Requires that the object supply a valid apiVersion field.

.PP
\fB\-\-port\fP=\-1
    The port that this container exposes.

.PP
\fB\-r\fP, \fB\-\-replicas\fP=1
    Number of replicas to create for this container. Default is 1.

.PP
\fB\-\-requests\fP=""
    The resource requirement requests for this container.  For example, 'cpu=100m,memory=256Mi'

.PP
\fB\-\-restart\fP="Always"
    The restart policy for this Pod.  Legal values [Always, OnFailure, Never].  If set to 'Always' a replication controller is created for this pod, if set to OnFailure or Never, only the Pod is created and \-\-replicas must be 1.  Default 'Always'

.PP
\fB\-a\fP, \fB\-\-show\-all\fP=false
    When printing, show all resources (default hide terminated pods.)

.PP
\fB\-\-sort\-by\fP=""
    If non\-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. 'ObjectMeta.Name'). The field in the API resource specified by this JSONPath expression must be an integer or a string.

.PP
\fB\-i\fP, \fB\-\-stdin\fP=false
    Keep stdin open on the container(s) in the pod, even if nothing is attached.

.PP
\fB\-t\fP, \fB\-\-template\fP=""
    Template string or path to template file to use when \-o=go\-template, \-o=go\-template\-file. The template format is golang templates [
\[la]http://golang.org/pkg/text/template/#pkg-overview\[ra]].

.PP
\fB\-\-tty\fP=false
    Allocated a TTY for each container in the pod.  Because \-t is currently shorthand for \-\-template, \-t is not supported for \-\-tty. This shorthand is deprecated and we expect to adopt \-t for \-\-tty soon.


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-\-alsologtostderr\fP=false
    log to standard error as well as files

.PP
\fB\-\-api\-version\fP=""
    The API version to use when talking to the server

.PP
\fB\-\-certificate\-authority\fP=""
    Path to a cert. file for the certificate authority.

.PP
\fB\-\-client\-certificate\fP=""
    Path to a client key file for TLS.

.PP
\fB\-\-client\-key\fP=""
    Path to a client key file for TLS.

.PP
\fB\-\-cluster\fP=""
    The name of the kubeconfig cluster to use

.PP
\fB\-\-context\fP=""
    The name of the kubeconfig context to use

.PP
\fB\-\-insecure\-skip\-tls\-verify\fP=false
    If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure.

.PP
\fB\-\-kubeconfig\fP=""
    Path to the kubeconfig file to use for CLI requests.

.PP
\fB\-\-log\-backtrace\-at\fP=:0
    when logging hits line file:N, emit a stack trace

.PP
\fB\-\-log\-dir\fP=""
    If non\-empty, write log files in this directory

.PP
\fB\-\-log\-flush\-frequency\fP=5s
    Maximum number of seconds between log flushes

.PP
\fB\-\-logtostderr\fP=true
    log to standard error instead of files

.PP
\fB\-\-match\-server\-version\fP=false
    Require server version to match client version

.PP
\fB\-\-namespace\fP=""
    If present, the namespace scope for this CLI request.

.PP
\fB\-\-password\fP=""
    Password for basic authentication to the API server.

.PP
\fB\-s\fP, \fB\-\-server\fP=""
    The address and port of the Kubernetes API server

.PP
\fB\-\-stderrthreshold\fP=2
    logs at or above this threshold go to stderr

.PP
\fB\-\-token\fP=""
    Bearer token for authentication to the API server.

.PP
\fB\-\-user\fP=""
    The name of the kubeconfig user to use

.PP
\fB\-\-username\fP=""
    Username for basic authentication to the API server.

.PP
\fB\-\-v\fP=0
    log level for V logs

.PP
\fB\-\-vmodule\fP=
    comma\-separated list of pattern=N settings for file\-filtered logging


.SH EXAMPLE
.PP
.RS

.nf
# Start a single instance of nginx.
$ kubectl run nginx \-\-image=nginx

# Start a single instance of hazelcast and let the container expose port 5701 .
$ kubectl run hazelcast \-\-image=hazelcast \-\-port=5701

# Start a single instance of hazelcast and set environment variables "DNS\_DOMAIN=cluster" and "POD\_NAMESPACE=default" in the container.
$ kubectl run hazelcast \-\-image=hazelcast \-\-env="DNS\_DOMAIN=cluster" \-\-env="POD\_NAMESPACE=default"

# Start a replicated instance of nginx.
$ kubectl run nginx \-\-image=nginx \-\-replicas=5

# Dry run. Print the corresponding API objects without creating them.
$ kubectl run nginx \-\-image=nginx \-\-dry\-run

# Start a single instance of nginx, but overload the spec of the replication controller with a partial set of values parsed from JSON.
$ kubectl run nginx \-\-image=nginx \-\-overrides='{ "apiVersion": "v1", "spec": { ... } }'

# Start a single instance of nginx and keep it in the foreground, don't restart it if it exits.
$ kubectl run \-i \-tty nginx \-\-image=nginx \-\-restart=Never

# Start the nginx container using the default command, but use custom arguments (arg1 .. argN) for that command.
$ kubectl run nginx \-\-image=nginx \-\- <arg1> <arg2> ... <argN>

# Start the nginx container using a different command and custom arguments
$ kubectl run nginx \-\-image=nginx \-\-command \-\- <cmd> <arg1> ... <argN>

.fi
.RE


.SH SEE ALSO
.PP
\fBkubectl(1)\fP,


.SH HISTORY
.PP
January 2015, Originally compiled by Eric Paris (eparis at redhat dot com) based on the kubernetes source material, but hopefully they have been automatically generated since!
